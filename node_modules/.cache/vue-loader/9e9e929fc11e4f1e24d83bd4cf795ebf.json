{"remainingRequest":"/Users/mikael/Documents/engcssummercampsite/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/mikael/Documents/engcssummercampsite/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mikael/Documents/engcssummercampsite/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mikael/Documents/engcssummercampsite/src/components/Gallery.vue?vue&type=template&id=15c1b052&","dependencies":[{"path":"/Users/mikael/Documents/engcssummercampsite/src/components/Gallery.vue","mtime":1628998194790},{"path":"/Users/mikael/Documents/engcssummercampsite/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mikael/Documents/engcssummercampsite/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/mikael/Documents/engcssummercampsite/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/mikael/Documents/engcssummercampsite/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKCJkaXYiLCBbCiAgICBfYygKICAgICAgInNlY3Rpb24iLAogICAgICB7CiAgICAgICAgc3RhdGljQ2xhc3M6CiAgICAgICAgICAiXG4gICAgY29sLXNwYW4tMTJcbiAgICBzbTpjb2wtc3Bhbi0xMlxuICAgIG1kOmNvbC1zcGFuLTZcbiAgICBsZzpjb2wtc3Bhbi02XG4gICAgeHhsOmNvbC1zcGFuLTZcbiAgICBweC0xNlxuICAgIHB5LTZcbiAgICBiZy1waW5rLTQwMFxuICAiCiAgICAgIH0sCiAgICAgIFsKICAgICAgICBfYygiaGVhZGVyIiwgWwogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJmbGV4IiB9LCBbCiAgICAgICAgICAgIF9jKCJkaXYiKSwKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJyb3V0ZXItbGluayIsCiAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczoKICAgICAgICAgICAgICAgICAgICAgICJ0ZXh0LXdoaXRlIGZvbnQtc2VtaWJvbGQgdGV4dC1sZyBob3Zlcjp0ZXh0LWJsdWUtNDAwIiwKICAgICAgICAgICAgICAgICAgICBhdHRyczogeyB0bzogIi8iIH0KICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgW192bS5fdigiQmFjayBIb21lIildCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAxCiAgICAgICAgICAgICkKICAgICAgICAgIF0pCiAgICAgICAgXSksCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICIgcmVsYXRpdmUgaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyIiB9LCBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgImgxIiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAidGV4dC1jZW50ZXIgdGV4dC03eGwgZm9udC1ib2xkIHAtNCB0ZXh0LXdoaXRlIHBiLTgiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFtfdm0uX3YoIiBTdW1tZXIgMjAyMSBQaG90byBHYWxsZXJ5ICIpXQogICAgICAgICAgKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImxnOmZsZXggaXRlbXMtY2VudGVyIGNvbnRhaW5lciBteC1hdXRvIG15LWF1dG8gIiB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICIgbGc6bS00IG15LTEyIG14LTggICIgfSwgWwogICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJyb3VuZGVkIHNoYWRvdy1tZCIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHdpZHRoOiA0MDAsIHNyYzogdGhpcy5zcmMxIH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICIgbGc6bS00IHJvdW5kZWQtbGcgIG15LTEyIG14LTggIiB9LCBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInJvdW5kZWQgc2hhZG93LW1kIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgd2lkdGg6IDQwMCwgc3JjOiB0aGlzLnNyYzIgfQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIiBsZzptLTQgIG15LTEyIG14LTggIiB9LCBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInJvdW5kZWQgc2hhZG93LW1kIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgd2lkdGg6IDQwMCwgc3JjOiB0aGlzLnNyYzMgfQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdCiAgICAgICAgICApLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAibGc6ZmxleCBpdGVtcy1jZW50ZXIgY29udGFpbmVyIG14LWF1dG8gbXktYXV0byIgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiIGxnOm0tNCBteS0xMiBteC04ICIgfSwgWwogICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJyb3VuZGVkIHNoYWRvdy1tZCIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHdpZHRoOiA0MDAsIHNyYzogdGhpcy5zcmM0IH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICIgbGc6bS00ICBteS0xMiBteC04ICIgfSwgWwogICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJyb3VuZGVkIHNoYWRvdy1tZCIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHdpZHRoOiA0MDAsIHNyYzogdGhpcy5zcmM1IH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICIgbGc6bS00IG15LTEyIG14LTggIiB9LCBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInJvdW5kZWQgc2hhZG93LW1kIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgd2lkdGg6IDQwMCwgc3JjOiB0aGlzLnNyYzYgfQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdCiAgICAgICAgICApLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAibGc6ZmxleCBpdGVtcy1jZW50ZXIgY29udGFpbmVyIG14LWF1dG8gbXktYXV0byIgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiIGxnOm0tNCBteS0xMiBteC04ICIgfSwgWwogICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJyb3VuZGVkIHNoYWRvdy1tZCIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHdpZHRoOiA0MDAsIHNyYzogdGhpcy5zcmM3IH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICIgbGc6bS00IG15LTEyIG14LTggIiB9LCBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInJvdW5kZWQgc2hhZG93LW1kIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgd2lkdGg6IDQwMCwgc3JjOiB0aGlzLnNyYzggfQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIiBsZzptLTQgbXktMTIgbXgtOCAiIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicm91bmRlZCBzaGFkb3ctbWQiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyB3aWR0aDogNDAwLCBzcmM6IHRoaXMuc3JjOSB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIF0pCiAgICAgICAgICAgIF0KICAgICAgICAgICksCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJsZzpmbGV4IGl0ZW1zLWNlbnRlciBjb250YWluZXIgbXgtYXV0byBteS1hdXRvIiB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICIgbGc6bS00IG15LTEyIG14LTggIiB9LCBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInJvdW5kZWQgc2hhZG93LW1kIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgd2lkdGg6IDQwMCwgc3JjOiB0aGlzLnNyYzEwIH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICIgbGc6bS00IG15LTEyIG14LTggIiB9LCBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInJvdW5kZWQgc2hhZG93LW1kIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgd2lkdGg6IDQwMCwgc3JjOiB0aGlzLnNyYzExIH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICIgbGc6bS00IG15LTEyIG14LTggIiB9LCBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInJvdW5kZWQgc2hhZG93LW1kIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgd2lkdGg6IDQwMCwgc3JjOiB0aGlzLnNyYzEyIH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgXQogICAgICAgICAgKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImxnOmZsZXggaXRlbXMtY2VudGVyIGNvbnRhaW5lciBteC1hdXRvIG15LWF1dG8iIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIiBsZzptLTQgbXktMTIgbXgtOCAiIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicm91bmRlZCBzaGFkb3ctbWQiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyB3aWR0aDogNDAwLCBzcmM6IHRoaXMuc3JjMTMgfQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIiBsZzptLTQgbXktMTIgbXgtOCAiIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicm91bmRlZCBzaGFkb3ctbWQiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyB3aWR0aDogNDAwLCBzcmM6IHRoaXMuc3JjMTQgfQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIiBsZzptLTQgbXktMTIgbXgtOCAiIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicm91bmRlZCBzaGFkb3ctbWQiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyB3aWR0aDogNDAwLCBzcmM6IHRoaXMuc3JjMTUgfQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdCiAgICAgICAgICApLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAibGc6ZmxleCBpdGVtcy1jZW50ZXIgY29udGFpbmVyIG14LWF1dG8gbXktYXV0byIgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiIGxnOm0tNCBteS0xMiBteC04ICIgfSwgWwogICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJyb3VuZGVkIHNoYWRvdy1tZCIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHdpZHRoOiA0MDAsIHNyYzogdGhpcy5zcmMxNiB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiIGxnOm0tNCBteS0xMiBteC04ICIgfSwgWwogICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJyb3VuZGVkIHNoYWRvdy1tZCIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHdpZHRoOiA0MDAsIHNyYzogdGhpcy5zcmMxNyB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiIGxnOm0tNCBteS0xMiBteC04ICIgfSwgWwogICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJyb3VuZGVkIHNoYWRvdy1tZCIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHdpZHRoOiA0MDAsIHNyYzogdGhpcy5zcmMxOCB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIF0pCiAgICAgICAgICAgIF0KICAgICAgICAgICksCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJsZzpmbGV4IGl0ZW1zLWNlbnRlciBjb250YWluZXIgbXgtYXV0byBteS1hdXRvIiB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICIgbGc6bS00IG15LTEyIG14LTggIiB9LCBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInJvdW5kZWQgc2hhZG93LW1kIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgd2lkdGg6IDQwMCwgc3JjOiB0aGlzLnNyYzE5IH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICIgbGc6bS00IG15LTEyIG14LTggIiB9LCBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInJvdW5kZWQgc2hhZG93LW1kIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgd2lkdGg6IDQwMCwgc3JjOiB0aGlzLnNyYzIwIH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICIgbGc6bS00IG15LTEyIG14LTggIiB9LCBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInJvdW5kZWQgc2hhZG93LW1kIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgd2lkdGg6IDQwMCwgc3JjOiB0aGlzLnNyYzIxIH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgXQogICAgICAgICAgKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImxnOmZsZXggaXRlbXMtY2VudGVyIGNvbnRhaW5lciBteC1hdXRvIG15LWF1dG8iIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIiBsZzptLTQgbXktMTIgbXgtOCAiIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicm91bmRlZCBzaGFkb3ctbWQiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyB3aWR0aDogNDAwLCBzcmM6IHRoaXMuc3JjMjIgfQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIiBsZzptLTQgbXktMTIgbXgtOCAiIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicm91bmRlZCBzaGFkb3ctbWQiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyB3aWR0aDogNDAwLCBzcmM6IHRoaXMuc3JjMjMgfQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIiBsZzptLTQgbXktMTIgbXgtOCAiIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicm91bmRlZCBzaGFkb3ctbWQiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyB3aWR0aDogNDAwLCBzcmM6IHRoaXMuc3JjMjQgfQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdCiAgICAgICAgICApLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAibGc6ZmxleCBpdGVtcy1jZW50ZXIgY29udGFpbmVyIG14LWF1dG8gbXktYXV0byIgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiIGxnOm0tNCBteS0xMiBteC04ICIgfSwgWwogICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJyb3VuZGVkIHNoYWRvdy1tZCIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHdpZHRoOiA0MDAsIHNyYzogdGhpcy5zcmMyNSB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiIGxnOm0tNCBteS0xMiBteC04ICIgfSwgWwogICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJyb3VuZGVkIHNoYWRvdy1tZCIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHdpZHRoOiA0MDAsIHNyYzogdGhpcy5zcmMyNiB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiIGxnOm0tNCBteS0xMiBteC04ICIgfSwgWwogICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJyb3VuZGVkIHNoYWRvdy1tZCIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHdpZHRoOiA0MDAsIHNyYzogdGhpcy5zcmMyNyB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIF0pCiAgICAgICAgICAgIF0KICAgICAgICAgICksCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJsZzpmbGV4IGl0ZW1zLWNlbnRlciBjb250YWluZXIgbXgtYXV0byBteS1hdXRvIiB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICIgbGc6bS00IG15LTEyIG14LTggIiB9LCBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInJvdW5kZWQgc2hhZG93LW1kIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgd2lkdGg6IDQwMCwgc3JjOiB0aGlzLnNyYzI4IH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICIgbGc6bS00IG15LTEyIG14LTggIiB9LCBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInJvdW5kZWQgc2hhZG93LW1kIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgd2lkdGg6IDQwMCwgc3JjOiB0aGlzLnNyYzI5IH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICIgbGc6bS00IG15LTEyIG14LTggIiB9LCBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInJvdW5kZWQgc2hhZG93LW1kIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgd2lkdGg6IDQwMCwgc3JjOiB0aGlzLnNyYzMwIH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgXQogICAgICAgICAgKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImxnOmZsZXggaXRlbXMtY2VudGVyIGNvbnRhaW5lciBteC1hdXRvIG15LWF1dG8iIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIiBsZzptLTQgbXktMTIgbXgtOCAiIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicm91bmRlZCBzaGFkb3ctbWQiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyB3aWR0aDogNDAwLCBzcmM6IHRoaXMuc3JjMzEgfQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIiBsZzptLTQgbXktMTIgbXgtOCAiIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicm91bmRlZCBzaGFkb3ctbWQiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyB3aWR0aDogNDAwLCBzcmM6IHRoaXMuc3JjMzIgfQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIiBsZzptLTQgbXktMTIgbXgtOCAiIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicm91bmRlZCBzaGFkb3ctbWQiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyB3aWR0aDogNDAwLCBzcmM6IHRoaXMuc3JjMzMgfQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdCiAgICAgICAgICApLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAibGc6ZmxleCBpdGVtcy1jZW50ZXIgY29udGFpbmVyIG14LWF1dG8gbXktYXV0byIgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiIGxnOm0tNCBteS0xMiBteC04ICIgfSwgWwogICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJyb3VuZGVkIHNoYWRvdy1tZCIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHdpZHRoOiA0MDAsIHNyYzogdGhpcy5zcmMzNCB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiIGxnOm0tNCBteS0xMiBteC04ICIgfSwgWwogICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJyb3VuZGVkIHNoYWRvdy1tZCIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHdpZHRoOiA0MDAsIHNyYzogdGhpcy5zcmMzNSB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiIGxnOm0tNCBteS0xMiBteC04ICIgfSwgWwogICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJyb3VuZGVkIHNoYWRvdy1tZCIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHdpZHRoOiA0MDAsIHNyYzogdGhpcy5zcmMzNiB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIF0pCiAgICAgICAgICAgIF0KICAgICAgICAgICksCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJsZzpmbGV4IGl0ZW1zLWNlbnRlciBjb250YWluZXIgbXgtYXV0byBteS1hdXRvIiB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICIgbGc6bS00IG15LTEyIG14LTggIiB9LCBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInJvdW5kZWQgc2hhZG93LW1kIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgd2lkdGg6IDQwMCwgc3JjOiB0aGlzLnNyYzM3IH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICIgbGc6bS00IG15LTEyIG14LTggIiB9LCBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInJvdW5kZWQgc2hhZG93LW1kIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgd2lkdGg6IDQwMCwgc3JjOiB0aGlzLnNyYzM4IH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICIgbGc6bS00IG15LTEyIG14LTggIiB9LCBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInJvdW5kZWQgc2hhZG93LW1kIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgd2lkdGg6IDQwMCwgc3JjOiB0aGlzLnNyYzM5IH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgXQogICAgICAgICAgKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImxnOmZsZXggaXRlbXMtY2VudGVyIGNvbnRhaW5lciBteC1hdXRvIG15LWF1dG8iIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIiBsZzptLTQgbXktMTIgbXgtOCAiIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicm91bmRlZCBzaGFkb3ctbWQiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyB3aWR0aDogNDAwLCBzcmM6IHRoaXMuc3JjNDAgfQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIiBsZzptLTQgbXktMTIgbXgtOCAiIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicm91bmRlZCBzaGFkb3ctbWQiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyB3aWR0aDogNDAwLCBzcmM6IHRoaXMuc3JjNDEgfQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIiBsZzptLTQgbXktMTIgbXgtOCAiIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicm91bmRlZCBzaGFkb3ctbWQiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyB3aWR0aDogNDAwLCBzcmM6IHRoaXMuc3JjNDMgfQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdCiAgICAgICAgICApLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAibGc6ZmxleCBpdGVtcy1jZW50ZXIgY29udGFpbmVyIG14LWF1dG8gbXktYXV0byIgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiIGxnOm0tNCBteS0xMiBteC04ICIgfSwgWwogICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJyb3VuZGVkIHNoYWRvdy1tZCIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHdpZHRoOiA0MDAsIHNyYzogdGhpcy5zcmM0NCB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiIGxnOm0tNCBteS0xMiBteC04ICIgfSwgWwogICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJyb3VuZGVkIHNoYWRvdy1tZCIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHdpZHRoOiA0MDAsIHNyYzogdGhpcy5zcmM0NSB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiIGxnOm0tNCBteS0xMiBteC04ICIgfSwgWwogICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJyb3VuZGVkIHNoYWRvdy1tZCIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHdpZHRoOiA0MDAsIHNyYzogdGhpcy5zcmM0NiB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIF0pCiAgICAgICAgICAgIF0KICAgICAgICAgICksCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJsZzpmbGV4IGl0ZW1zLWNlbnRlciBjb250YWluZXIgbXgtYXV0byBteS1hdXRvIiB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICIgbGc6bS00IG15LTEyIG14LTggIiB9LCBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInJvdW5kZWQgc2hhZG93LW1kIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgd2lkdGg6IDQwMCwgc3JjOiB0aGlzLnNyYzQ3IH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICIgbGc6bS00IG15LTEyIG14LTggIiB9LCBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInJvdW5kZWQgc2hhZG93LW1kIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgd2lkdGg6IDQwMCwgc3JjOiB0aGlzLnNyYzQ4IH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICIgbGc6bS00IG15LTEyIG14LTggIiB9LCBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInJvdW5kZWQgc2hhZG93LW1kIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgd2lkdGg6IDQwMCwgc3JjOiB0aGlzLnNyYzUwIH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgXQogICAgICAgICAgKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImxnOmZsZXggaXRlbXMtY2VudGVyIGNvbnRhaW5lciBteC1hdXRvIG15LWF1dG8iIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIiBsZzptLTQgbXktMTIgbXgtOCAiIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicm91bmRlZCBzaGFkb3ctbWQiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyB3aWR0aDogNDAwLCBzcmM6IHRoaXMuc3JjNTEgfQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIiBsZzptLTQgbXktMTIgbXgtOCAiIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicm91bmRlZCBzaGFkb3ctbWQiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyB3aWR0aDogNDAwLCBzcmM6IHRoaXMuc3JjNTMgfQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIiBsZzptLTQgbXktMTIgbXgtOCAiIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicm91bmRlZCBzaGFkb3ctbWQiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyB3aWR0aDogNDAwLCBzcmM6IHRoaXMuc3JjNTQgfQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdCiAgICAgICAgICApLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAibGc6ZmxleCBpdGVtcy1jZW50ZXIgY29udGFpbmVyIG14LWF1dG8gbXktYXV0byIgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiIGxnOm0tNCBteS0xMiBteC04ICIgfSwgWwogICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJyb3VuZGVkIHNoYWRvdy1tZCIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHdpZHRoOiA0MDAsIHNyYzogdGhpcy5zcmM1NSB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiIGxnOm0tNCBteS0xMiBteC04ICIgfSwgWwogICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJyb3VuZGVkIHNoYWRvdy1tZCIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHdpZHRoOiA0MDAsIHNyYzogdGhpcy5zcmM1NiB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiIGxnOm0tNCBteS0xMiBteC04ICIgfSwgWwogICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJyb3VuZGVkIHNoYWRvdy1tZCIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHdpZHRoOiA0MDAsIHNyYzogdGhpcy5zcmM1NyB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIF0pCiAgICAgICAgICAgIF0KICAgICAgICAgICksCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJsZzpmbGV4IGl0ZW1zLWNlbnRlciBjb250YWluZXIgbXgtYXV0byBteS1hdXRvIiB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICIgbGc6bS00IG15LTEyIG14LTggIiB9LCBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInJvdW5kZWQgc2hhZG93LW1kIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgd2lkdGg6IDQwMCwgc3JjOiB0aGlzLnNyYzU4IH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICIgbGc6bS00IG15LTEyIG14LTggIiB9LCBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInJvdW5kZWQgc2hhZG93LW1kIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgd2lkdGg6IDQwMCwgc3JjOiB0aGlzLnNyYzU5IH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICIgbGc6bS00IG15LTEyIG14LTggIiB9LCBbCiAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInJvdW5kZWQgc2hhZG93LW1kIiwKICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgd2lkdGg6IDQwMCwgc3JjOiB0aGlzLnNyYzYwIH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgXQogICAgICAgICAgKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImxnOmZsZXggaXRlbXMtY2VudGVyIGNvbnRhaW5lciBteC1hdXRvIG15LWF1dG8iIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIiBsZzptLTQgbXktMTIgbXgtOCAiIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicm91bmRlZCBzaGFkb3ctbWQiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyB3aWR0aDogNDAwLCBzcmM6IHRoaXMuc3JjNjEgfQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIiBsZzptLTQgbXktMTIgbXgtOCAiIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicm91bmRlZCBzaGFkb3ctbWQiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyB3aWR0aDogNDAwLCBzcmM6IHRoaXMuc3JjNjIgfQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIiBsZzptLTQgbXktMTIgbXgtOCAiIH0sIFsKICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicm91bmRlZCBzaGFkb3ctbWQiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyB3aWR0aDogNDAwLCBzcmM6IHRoaXMuc3JjNjMgfQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICBdKQogICAgICAgICAgICBdCiAgICAgICAgICApCiAgICAgICAgXSkKICAgICAgXQogICAgKSwKICAgIF9jKCJzZWN0aW9uIiwgeyBzdGF0aWNDbGFzczogImgtZnVsbCBiZy1ncmF5LTgwMCIgfSwgWwogICAgICBfdm0uX20oMCksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiYm9yZGVyLXQtMiBteC0xMCBib3JkZXItZ3JheS01MDAiIH0pLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInB5LTQgcHktNiBweC0xNiBmbGV4IGp1c3RpZnktYmV0d2VlbiIgfSwgWwogICAgICAgIF92bS5fbSgxKSwKICAgICAgICBfYygiZGl2IiwgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJhIiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiZmxleCBzcGFjZS14LTIgdGV4dC13aGl0ZSBob3Zlcjp0ZXh0LXllbGxvdy00MDAiLAogICAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6ICIjIiB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygicCIsIHsgc3RhdGljQ2xhc3M6ICJmb250LXNlbWlib2xkICB0ZXh0LXNtIiB9LCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoIkdPIFRPUCIpCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAic3ZnIiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJoLTYgdy02ICAtbXQtMSIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgeG1sbnM6ICJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIsCiAgICAgICAgICAgICAgICAgICAgZmlsbDogIm5vbmUiLAogICAgICAgICAgICAgICAgICAgIHZpZXdCb3g6ICIwIDAgMjQgMjQiLAogICAgICAgICAgICAgICAgICAgIHN0cm9rZTogImN1cnJlbnRDb2xvciIKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoInBhdGgiLCB7CiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICJzdHJva2UtbGluZWNhcCI6ICJyb3VuZCIsCiAgICAgICAgICAgICAgICAgICAgICAic3Ryb2tlLWxpbmVqb2luIjogInJvdW5kIiwKICAgICAgICAgICAgICAgICAgICAgICJzdHJva2Utd2lkdGgiOiAiMiIsCiAgICAgICAgICAgICAgICAgICAgICBkOiAiTTggN2w0LTRtMCAwbDQgNG0tNC00djE4IgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0KICAgICAgICAgICkKICAgICAgICBdKQogICAgICBdKQogICAgXSkKICBdKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInB5LTYgcHgtMTYgZmxleCBqdXN0aWZ5LWJldHdlZW4iIH0sIFsKICAgICAgX2MoImRpdiIsIFsKICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgc3RhdGljQ2xhc3M6ICJmb290ZXJsb2dvIiwKICAgICAgICAgIGF0dHJzOiB7IHNyYzogcmVxdWlyZSgiLi4vYXNzZXRzL2xvZ28ucG5nIikgfQogICAgICAgIH0pCiAgICAgIF0pCiAgICBdKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgWwogICAgICBfYygiaDEiLCB7IHN0YXRpY0NsYXNzOiAiZm9udC1zZW1pYm9sZCB0ZXh0LXdoaXRlIHRleHQtc20iIH0sIFsKICAgICAgICBfdm0uX3YoIkNTU1VNTUVSRFIgQCAyMDIxIikKICAgICAgXSkKICAgIF0pCiAgfQpdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}